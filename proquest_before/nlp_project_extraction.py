

class news(object):

    def __init__(self, title, date, publisher, subjects, country, text):
        self.title = title

        self.date = date
#6 digit integer, 2020/03/10 -> 200310
        self.publisher = publisher
#name of publisher like 'the times', 'bbc', 'new york times' etc... 
        self.subjects = subjects
#list of subjects
        self.country = country
#published country
        self.text = text
#whole text of newspaper.
    def get_title(self):
        return self.title
    def set_title(self, title):
        self.title = title

    def get_date(self):
        return self.date
    def set_date(self, date):
        self.date = date
        
    def get_publisher(self):
        return self.publisher
    def set_publisher(self, publisher):
        self.publisher = publisher

    def get_subjects(self):
        return self.subjects
    def set_subjects(self, subjects):
        self.subjects = subjects

    def get_country(self):
        return self.country
    def set_country(self, country):
        self.country = country

    def get_text(self):
        return self.text
    def set_text(self, text):
        self.text = text

    def print_all(self):
        print(self.title + " / " + self.publisher +" / " + self.country)
        print(self.date)
        print(self.subjects)
#        print(self.text)
def takeObj(elem):
    return elem[1]

def mon_to_str(month):
    if(month == "Jan"):
        return '01'
    if("Feb" in month):
        return '02'
    if("Mar" in month):
        return "03"

#gets filename of text and adds it to global list of news: newses
def make_news_list(filename):
    textfile = open(filename, 'r', encoding = 'UTF-8')

    document_link = True
    full_text_b = False
    subject_b = False
    publisher_b = False
    date_b = False
    country_b = False


    lines = textfile.readlines()
    i = 0
    title = ""
    full_text = ""
    subject = []
    publisher = ""
    date = ""
    country = ""

    for line in lines:
        if("PDF GENERATED BY SEARCH" in line.strip()):
            continue
        if("Page " in line.strip() and " of " in line.strip()):
            continue
        if("ProQuest document" in line.strip()):
            document_link = False
            continue
        if(document_link == True):
            if(title == ""):
                title += line.strip()
            else:
                title += line.strip()
                document_link = False
            continue
        if("FULL TEXT" in line.strip()):
            full_text_b = True
            continue
        if(full_text_b == True):
            full_text += line.strip()
        if("DETAILS" in line.strip()):
            full_text_b = False
            continue
        if("Subject:" in line.strip()):
            subject_b = True
            continue
    
        if(subject_b == True and len(line.strip())>2):
            subject_b = False
            subject= line.strip().split("; ")
            continue
        if("Publication title:" in line.strip()):
            publisher_b = True
            continue
        if(publisher_b == True and len(line.strip())>2):
            publisher = line.strip().split("; ")[0]
            publisher_b = False
         
        if("Publication date:" in line.strip()):
            date_b = True
            continue
        if(date_b == True and len(line.strip())>2):
            date = line.strip().split(' ')
            if(len(date) == 4):
                date_text = "ERROR"
                date_b = False
                continue
            date[1] = date[1].replace(",", "")
            if(len(date[1]) == 1):
                date[1] = "0" + date[1]
            date_text = date[2] + mon_to_str(date[0]) + date[1]
            date_b = False
            continue
    
        if("Country of publication:" in line.strip()):
            country_b = True
            continue
        if(country_b == True and len(line.strip())>2):
            country = line.strip().split(',')[0]
            country_b = False
            continue
        if("Linking Service" in line.strip()):
            document_link = True
            new_news = news(title, date_text, publisher, subject, country, full_text)
            newses.append(new_news)
            title = ""
            date = ""
            publisher = ""
            subject = []
            country = ""
            full_text = ""
            continue
    
    textfile.close()
    return newses


def get_news(date_early, date_late, publisher, country):
    empty_list = []
    for x in newses:
        if(publisher in x.get_publisher() and country in x.get_country()):
            if (int(x.get_date()) >= date_early):
                if(int(x.get_date()) <= date_late):
                    empty_list.append(x)
    return empty_list
            
#list of all newses            
newses = []

#run functions to add following news to newses
make_news_list("thetimes_20200203~20200216.txt")
make_news_list("thetimes_20200217~20200301.txt")

#remove errors in file
for x in newses:
    if x.get_date() == "ERROR":
        newses.remove(x)

#select wanted news with begin date, end date, publisher, and country
temp1 = []
temp1 = get_news(20200203, 20200209, "The Times", "United Kingdom")

temp2 = []
temp2 = get_news(20200210, 20200216, "The Times", "United Kingdom")

temp3 = []
temp3 = get_news(20200217, 20200223, "The Times", "United Kingdom")

temp4 = []
temp4 = get_news(20200224, 20200301, "The Times", "United Kingdom")

temp5 = []
temp5 = get_news(20200203, 20200301, "The Times", "United States")
def printbysub(temp):
    #count how many times each subject takes place
    subject_count = {}
    for x in temp:
        for y in x.get_subjects():
            if y in subject_count.keys():
                subject_count[y] += 1
            else:
                subject_count[y] = 1
                

    #change dictionary into list and sort it.
    subject_list = []
    for key, value in subject_count.items():
        temp = [key, value]
        subject_list.append(temp)

    subject_list.sort(key = takeObj, reverse = True)

    #print 10 most occurences of subject with their numbers
    print(subject_list[:20])


printbysub(temp1)
printbysub(temp2)
printbysub(temp3)
printbysub(temp4)
printbysub(temp5)


